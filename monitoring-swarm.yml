---
version: '3.8'

volumes:
  grafana-data:
    driver: local
  prometheus-data:
    driver: local

networks:
  monitoring:
    driver: overlay
    attachable: true
  
services:
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1    
    # container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
    privileged: true
    deploy:
      mode: global
      labels:
        - "prometheus-job=cadvisor"
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
  
  node-exporter:
    image: prom/node-exporter:v1.5.0
    # container_name: node-exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - "9100:9100"
    deploy:
      mode: global
      labels:
        - "prometheus-job=node-exporter"

  grafana:
    image: grafana/grafana-oss:latest
    # container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring
  
  prometheus:
    image: prom/prometheus:v2.43.0-rc.0
    # container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - /home/ksaleki/Prometheus-Granafa/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
      - /home/ksaleki/Prometheus-Granafa/prometheus/targets.json:/etc/prometheus/targets.json
    restart: unless-stopped
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.hostname == ubuntu-01]
  
  